	.form-control:focus {
        border-color: #8464ca;
        box-shadow: 0 0 8px #beace3;
    }
    .contact-modal {
        width: 600px;
        padding: 50px;
        margin: 30px auto;
    }
    .contact-modal h4 {
        font-size: 26px;
        display: inline-block;
    }
    .contact-modal .form-control, .contact-modal .btn  {
        min-height: 38px;
        border-radius: 1px;
        outline: none;
    }
    .contact-modal .btn-primary {
        min-width: 100px;
        background: #8464ca;
        border: none;
    }
    .contact-modal .btn-primary:hover {
        background: #6d45c0;
    }
    .contact-modal .btn-primary:focus {
        box-shadow: 0 0 8px rgba(132, 100, 202, 0.6);
    }
    .contact-modal .btn-link {
        color: #6d45c0;
    }
    .contact-modal label {
        opacity: 0.9;
        font-weight: normal;
        font-size: 95%;
    }
    .contact-modal textarea {
        resize: vertical;
    }
    .contact-modal.modal-dialog {
        width: 600px;
    }
    .contact-modal .modal-header {
        padding: 20px 35px 14px;
    }
    .contact-modal .modal-content {
        border-radius: 1px;
    }
    .contact-modal .close {
        position: absolute;
        right: 35px;
        top: 25px;
    }
    .contact-modal .modal-body {
        padding: 20px 35px 35px;
    }
    .hint-text {
        opacity: 0.8;
    }
    .trigger-btn {
      display: inline-block;
   }
	
   /* card 이미지 부모요소의 높이 지정 */
   .img-wrapper{
      height: 250px;
      /* transform 을 적용할대 0.3s 동안 순차적으로 적용하기 */
      transition: transform 0.3s ease-out;
   }
   /* .img-wrapper 에 마우스가 hover 되었을때 적용할 css */
   .img-wrapper:hover{
      /* 원본 크기의 1.1 배로 확대 시키기*/
      transform: scale(1.05);
   }
   
   .card .card-text{
      /* 한줄만 text 가 나오고  한줄 넘는 길이에 대해서는 ... 처리 하는 css */
      display:block;
      white-space : nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
   }
   	.img-wrapper img{
	   	width: 230px;
	   	height: 250px;
	   	/* fill | contain | cover | scale-down | none(default) */
	   	/*	
	   		cover - 부모의 크기에 맞게 키운 후, 자른다. 비율은 일정하게 증가한다. 
	   		contain - 안잘린다. 대신 빈 공간이 남을 수 있다.
	   		fill - 부모의 크기에 딱 맞게, 비율 관계 없이 맞춘다.(이미지가 일그러질 수 있다.)
	   		scale-down - 가로, 세로 중에 큰 것을 부모의 크기에 맞춘 상태까지만 커지거나 작아지고, 비율은 일정하다.
	   	*/
		object-fit: contain;	
   	}
   	#textBoxDiv::-webkit-scrollbar{
   		width:5px;
   	}
   	#textBoxDiv::-webkit-scrollbar-thumb {
        background-color: #fdc3c2; 
    }

    #textBoxDiv::-webkit-scrollbar-track {
        background-color: gray; 
    }
    #textBoxDiv ul{width:100%;list-style:none;}
    #textBoxDiv ul li{width:100%;}
    #textBoxDiv ul li > div {font-size:12px;}
    #textBoxDiv ul li > div.sender{margin: 10px 20px 0 20px; font-weight:bold;}
    #textBoxDiv ul li > div.message{ display: inline-block; word-break:break-all; margin: 3px; max-width: 100%; border: 1px solid #888; padding: 5px; border-radius: 5px; background-color: #FCFCFC; color: #555; text-align: left; }
	#textBoxDiv ul li.left { text-align: left; }
	#textBoxDiv ul li.right { text-align: right; }
	img{
		width:350px;
		height:350px;
		object-fit:contain; 
		align:center;
		background-color:#fceee4;
	}
	.detailImage img{
		
		margin-bottom:15px;
	}
